-- ******************************************************************************
-- 
--                   /------o
--             eccelerators
--          o------/
-- 
--  This file is an Eccelerators GmbH sample project.
-- 
--  MIT License:
--  Copyright (c) 2023 Eccelerators GmbH
-- 
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
-- 
--  The above copyright notice and this permission notice shall be included in all
--  copies or substantial portions of the Software.
-- 
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
--  SOFTWARE.
-- ******************************************************************************

var InterruptCollectorReadVal 0

InterruptCollectorDefaultTest:
proc   
    -- call $ResetTestInterruptCollectorBlkByBusReset
    call $ReadBackTestInterruptCollectorBlk
    
    -- restore reset start condition after read back test
    bus write InterruptCollectorIfcBus 32 $EventMaskRegAddress 0b0000
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b1111
    bus write InterruptCollectorIfcBus 32 $EventOverrunRegAddress 0b1111
    
    bus verify InterruptCollectorIfcBus 32 $EventMaskRegAddress InterruptCollectorReadVal 0 0b1111 
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0 0b1111
    bus verify InterruptCollectorIfcBus 32 $EventOverrunRegAddress InterruptCollectorReadVal 0 0b1111
    
    -- test different event catch cases
    signal write TestInterruptCollectorOut 0b0001
    wait 20
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b1011 0b1111 
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b1011
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b0000 0b1111 

    signal write TestInterruptCollectorOut 0b0010
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b0010
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b0010 0b1111
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b0010
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b0010 0b1111
    
    signal write TestInterruptCollectorOut 0b0000
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b1111
    signal write TestInterruptCollectorOut 0b0100
    wait 20
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b0100
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b0100 0b1111 
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b1011
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b0100 0b1111
    
    -- test different event overrun cases
    signal write TestInterruptCollectorOut 0b0000
    wait 20
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b1111
    bus write InterruptCollectorIfcBus 32 $EventOverrunRegAddress 0b1111
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b0000 0b1111
    signal write TestInterruptCollectorOut 0b0001
    wait 20
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b1011 0b1111 
    signal write TestInterruptCollectorOut 0b0000
    wait 20
    signal write TestInterruptCollectorOut 0b0001
    wait 20    
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b1011 0b1111 
    bus verify InterruptCollectorIfcBus 32 $EventOverrunRegAddress InterruptCollectorReadVal 0b1011 0b1111
    bus write InterruptCollectorIfcBus 32 $EventOverrunRegAddress 0b1111
    bus verify InterruptCollectorIfcBus 32 $EventOverrunRegAddress InterruptCollectorReadVal 0b0000 0b1111
    
    signal write TestInterruptCollectorOut 0b0000
    wait 20
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b1111
    bus write InterruptCollectorIfcBus 32 $EventOverrunRegAddress 0b1111
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b0000 0b1111
    signal write TestInterruptCollectorOut 0b1001
    wait 20
    bus write InterruptCollectorIfcBus 32 $EventOverrunRegAddress 0b1000
    bus verify InterruptCollectorIfcBus 32 $EventOverrunRegAddress InterruptCollectorReadVal 0b0000 0b1111

    -- test different event mask cases     
    signal write TestInterruptCollectorOut 0b0000
    wait 20
    bus write InterruptCollectorIfcBus 32 $EventMaskRegAddress 0b0000
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b1111
    bus write InterruptCollectorIfcBus 32 $EventOverrunRegAddress 0b1111
    
    bus verify InterruptCollectorIfcBus 32 $EventMaskRegAddress InterruptCollectorReadVal 0 0b1111 
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0 0b1111
    bus verify InterruptCollectorIfcBus 32 $EventOverrunRegAddress InterruptCollectorReadVal 0 0b1111
    
    signal write TestInterruptCollectorOut 0b0101
    wait 20
    bus write InterruptCollectorIfcBus 32 $EventCatchRegAddress 0b0100
    bus verify InterruptCollectorIfcBus 32 $EventCatchRegAddress InterruptCollectorReadVal 0b1111 0b1111
    bus verify InterruptCollectorIfcBus 32 $EventMaskRegAddress InterruptCollectorReadVal 0 0b1111 
    bus write InterruptCollectorIfcBus 32 $EventMaskRegAddress 0b0001
    bus verify InterruptCollectorIfcBus 32 $EventMaskRegAddress InterruptCollectorReadVal 0b0001 0b1111
    bus write InterruptCollectorIfcBus 32 $EventMaskRegAddress 0b0011
    bus verify InterruptCollectorIfcBus 32 $EventMaskRegAddress InterruptCollectorReadVal 0b0011 0b1111
    bus write InterruptCollectorIfcBus 32 $EventMaskRegAddress 0b0111
    bus verify InterruptCollectorIfcBus 32 $EventMaskRegAddress InterruptCollectorReadVal 0b0111 0b1111
    bus write InterruptCollectorIfcBus 32 $EventMaskRegAddress 0b1111
    bus verify InterruptCollectorIfcBus 32 $EventMaskRegAddress InterruptCollectorReadVal 0b1111 0b1111
     
end proc