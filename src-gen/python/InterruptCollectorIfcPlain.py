# Copyright (C) 2023 Eccelerators GmbH
# 
# This code was generated by:
#
# HxS Compiler 1.0.19-10671667
# Python Extension for HxS 1.0.7-62bb9ef4
# 
# Further information at https://eccelerators.com/hxs
# 
# Changes to this file may cause incorrect behavior and will be lost if the
# code is regenerated.
	
	
# -----------------------------------------------------
# Addresses, widths, values and masks for direct access
# -----------------------------------------------------
InterruptCollectorIfcAddressBusWidth = 4
InterruptCollectorIfcDataBusWidth = 32

class InterruptCollectorBlk:
    InterruptCollectorBlkAddress = 0x0 
    InterruptCollectorBlkSize = 0xC 

    @property
    def InterruptMaskRegAddress(self):
        return (0x0 + self.InterruptCollectorBlkAddress)

    InterruptMaskRegWidth = 32

    Mask3Mask = 0x00000008
    Mask3Position = 3
    Mask3Width = 1
    Mask3_InterruptDisabledMVal = 0x00000000
    Mask3_InterruptEnabledMVal = 0x00000008
    Mask3BusResetMRstVal = 0x00000000

    Mask2Mask = 0x00000004
    Mask2Position = 2
    Mask2Width = 1
    Mask2_InterruptDisabledMVal = 0x00000000
    Mask2_InterruptEnabledMVal = 0x00000004
    Mask2BusResetMRstVal = 0x00000000

    Mask1Mask = 0x00000002
    Mask1Position = 1
    Mask1Width = 1
    Mask1_InterruptDisabledMVal = 0x00000000
    Mask1_InterruptEnabledMVal = 0x00000002
    Mask1BusResetMRstVal = 0x00000000

    Mask0Mask = 0x00000001
    Mask0Position = 0
    Mask0Width = 1
    Mask0_InterruptDisabledMVal = 0x00000000
    Mask0_InterruptEnabledMVal = 0x00000001
    Mask0BusResetMRstVal = 0x00000000


    @property
    def InterruptRequestRegAddress(self):
        return (0x4 + self.InterruptCollectorBlkAddress)

    InterruptRequestRegWidth = 32

    Request3Mask = 0x00000008
    Request3Position = 3
    Request3Width = 1
    Request3_NotPendingMVal = 0x00000000
    Request3_PendingMVal = 0x00000008
    Request3_NotConfirmedMVal = 0x00000000
    Request3_ConfirmedMVal = 0x00000008
    Request3_AsyncMRstVal = 0x00000000

    Request2Mask = 0x00000004
    Request2Position = 2
    Request2Width = 1
    Request2_NotPendingMVal = 0x00000000
    Request2_PendingMVal = 0x00000004
    Request2_NotConfirmedMVal = 0x00000000
    Request2_ConfirmedMVal = 0x00000004
    Request2_AsyncMRstVal = 0x00000000

    Request1Mask = 0x00000002
    Request1Position = 1
    Request1Width = 1
    Request1_NotPendingMVal = 0x00000000
    Request1_PendingMVal = 0x00000002
    Request1_NotConfirmedMVal = 0x00000000
    Request1_ConfirmedMVal = 0x00000002
    Request1_AsyncMRstVal = 0x00000000

    Request0Mask = 0x00000001
    Request0Position = 0
    Request0Width = 1
    Request0_NotPendingMVal = 0x00000000
    Request0_PendingMVal = 0x00000001
    Request0_NotConfirmedMVal = 0x00000000
    Request0_ConfirmedMVal = 0x00000001
    Request0_AsyncMRstVal = 0x00000000


    @property
    def InterruptServiceRegAddress(self):
        return (0x8 + self.InterruptCollectorBlkAddress)

    InterruptServiceRegWidth = 32

    Service3Mask = 0x00000008
    Service3Position = 3
    Service3Width = 1
    Service3_EndedMVal = 0x00000000
    Service3_InProcessMVal = 0x00000008
    Service3_NotConfirmedMVal = 0x00000000
    Service3_ConfirmedMVal = 0x00000008
    Service3_AsyncMRstVal = 0x00000000

    Service2Mask = 0x00000004
    Service2Position = 2
    Service2Width = 1
    Service2_EndedMVal = 0x00000000
    Service2_InProcessMVal = 0x00000004
    Service2_NotConfirmedMVal = 0x00000000
    Service2_ConfirmedMVal = 0x00000004
    Service2_AsyncMRstVal = 0x00000000

    Service1Mask = 0x00000002
    Service1Position = 1
    Service1Width = 1
    Service1_EndedMVal = 0x00000000
    Service1_InProcessMVal = 0x00000002
    Service1_NotConfirmedMVal = 0x00000000
    Service1_ConfirmedMVal = 0x00000002
    Service1_AsyncMRstVal = 0x00000000

    Service0Mask = 0x00000001
    Service0Position = 0
    Service0Width = 1
    Service0_EndedMVal = 0x00000000
    Service0_InProcessMVal = 0x00000001
    Service0_NotConfirmedMVal = 0x00000000
    Service0_ConfirmedMVal = 0x00000001
    Service0_AsyncMRstVal = 0x00000000
